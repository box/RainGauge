#!/usr/bin/env bash
#
# /etc/init.d/raingauge
# init script for pt-stalk/raingauge service 
#
# chkconfig: 5 90 60
# description: Runs pt-stalk to collect data from anomolous db events 
#
RETVAL=0

# Bring in config variables needed to start up the pt-stalk program
source /etc/raingauge_rc

validate_config() {
  # If all the variables are set, 0 is returned. Otherwise, non-zero status will be returned
  [[ ! -z "${PT_STALK_PROG}" ]] && [[ ! -z "${PT_STALK_EXECUTE_AFTER}" ]]  && \
  [[ ! -z "${PT_MYSQL_USER}" ]] && [[ ! -z "${PT_MYSQL_SOCKET}" ]] && [[ ! -z "${PT_PID_FILE}" ]] && \
  [[ ! -z "${PT_STALK_THRESHOLD}" ]] && [[ ! -z "${PT_STALK_CYCLES}" ]]  && [[ ! -z "${PT_STALK_ITERATIONS}" ]] && \
  [[ ! -z "${PT_STALK_SLEEP}" ]] && [[ ! -z "${PT_STALK_COLLECT_DIR}" ]] && [[ ! -z "${PT_STALK_VARIABLE}" ]]
}

ptstalk_start() {
  validate_config
  RETVAL=$?
  if (( $RETVAL == 0 ))
  then
    echo "Starting pt-stalk..."

    if [[ -z "${PT_MYSQL_PASS}" ]]
    then
      PT_MYSQL_PASS_ARG=""
    else
      PT_MYSQL_PASS_ARG="-p\"${PT_MYSQL_PASS}\""
    fi

    if [[ -z "${PT_STALK_FUNCTION}" ]]
    then
      HOME="/root" "${PT_STALK_PROG}" --daemonize --variable="${PT_STALK_VARIABLE}" --threshold="${PT_STALK_THRESHOLD}" --pid="${PT_PID_FILE}" --cycles="${PT_STALK_CYCLES}" --sleep="${PT_STALK_SLEEP}" --exec-after-sleep="${PT_STALK_EXECUTE_AFTER}" --dest="${PT_STALK_COLLECT_DIR}" ${PT_STALK_EXTRA_OPTIONS} -- -S "${PT_MYSQL_SOCKET}" -u "${PT_MYSQL_USER}" "${PT_MYSQL_PASS_ARG}"
    else
      HOME="/root" "${PT_STALK_PROG}" --daemonize --function="${PT_STALK_FUNCTION}" --variable=test_triggered --threshold=0 --pid="${PT_PID_FILE}" --cycles="${PT_STALK_CYCLES}" --sleep="${PT_STALK_SLEEP}" --exec-after-sleep="${PT_STALK_EXECUTE_AFTER}" --dest="${PT_STALK_COLLECT_DIR}" ${PT_STALK_EXTRA_OPTIONS} -- -S "${PT_MYSQL_SOCKET}" -u "${PT_MYSQL_USER}" "${PT_MYSQL_PASS_ARG}"
    fi
    RETVAL=$?
  fi
  (( $RETVAL == 0 )) && touch /var/lock/ptstalk
  return $RETVAL
}

ptstalk_stop() {
  echo "Stopping pt-stalk..."
  kill $( cat "${PT_PID_FILE}" )
  RETVAL=$?
  [ $RETVAL -eq 0 ] && rm -f /var/lock/ptstalk
  return $RETVAL
}

ptstalk_restart() {
  ptstalk_stop && ptstalk_start
}

case "$1" in
  start)
    ptstalk_start
    ;;
  stop)
    ptstalk_stop
    ;;
  restart)
    ptstalk_restart
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

exit $RETVAL
